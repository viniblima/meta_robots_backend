# Generated by Django 3.2.4 on 2022-07-06 17:54

import apps.users.models
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('name', models.CharField(max_length=256, verbose_name='Nome / Apelido')),
                ('email', models.EmailField(error_messages={'unique': 'Já existe um usuario cadastrado com este email.'}, max_length=256, unique=True, verbose_name='email')),
                ('gender', models.CharField(choices=[('Mulher', 'Mulher'), ('Homem', 'Homem'), ('Outro', 'Não me identifico')], max_length=16, verbose_name='Gênero')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
                ('is_staff', models.BooleanField(default=False, help_text='Define se esse usuário pode logar no site admin', verbose_name='Staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_confirm', models.BooleanField(default=False, verbose_name='Ativo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', apps.users.models.UserManager()),
            ],
        ),
    ]
